{"version":3,"sources":["Icons.js","Autocomplete.js","index.js"],"names":["SearchIcon","color","size","strokeWidth","width","height","viewBox","xmlns","d","fill","stroke","MovieIcon","className","version","id","x","y","enableBackground","xml-space","Autocomplete","props","getInfo","debounce","state","userInput","length","fetch","then","results","json","setState","filteredSuggestions","map","obj","title","rating","vote_average","release_date","split","slice","onBlur","checkBlur","onInputClick","inputClicked","fade","onChange","e","currentTarget","value","showSuggestions","onClick","prevState","getAttribute","this","secondInputComponent","suggestionsListComponent","autoFocus","suggestion","key","datakey","Component","container","document","createElement","body","appendChild","render"],"mappings":"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","file":"static/js/main.06561721.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchIcon = ({ color, size, strokeWidth }) => (\r\n  <svg\r\n    width={size}\r\n    height={size}\r\n    viewBox=\"0 0 92 92\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M20.8 39.27c0-11.016 8.808-19.976 19.637-19.976 10.827 0 19.635 8.96 \r\n      19.635 19.972 0 11.014-8.808 19.976-19.635 19.976-10.83 0-19.64-8.96-19.64-19.976zm55.472 \r\n      32.037l-15.976-16.25c3.357-4.363 5.376-9.835 5.376-15.788 0-14.16-11.32-25.67-25.232-25.67-13.923\r\n      0-25.24 11.51-25.24 25.67s11.32 25.67 25.237 25.67c4.776 0 9.227-1.388 13.04-3.74L69.84 77.85c1.77\r\n      1.8 4.664 1.8 6.432 0 1.77-1.8 1.77-4.744 0-6.544z\"\r\n      fill={color}\r\n      stroke={color}\r\n      strokeWidth={strokeWidth}\r\n    />\r\n  </svg>\r\n);\r\n\r\nSearchIcon.propTypes = {\r\n  color: PropTypes.string,\r\n  size: PropTypes.number,\r\n  strokeWidth: PropTypes.number\r\n};\r\n\r\nconst MovieIcon = ({ className, color, size, strokeWidth }) => (\r\n  <svg\r\n    version=\"1.1\"\r\n    id=\"Layer_1\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    x=\"0px\"\r\n    y=\"0px\"\r\n    width={size}\r\n    height={size}\r\n    viewBox=\"0 0 512 512\"\r\n    enableBackground=\"new 0 0 512 512\"\r\n    xml-space=\"preserve\"\r\n    fill={color}\r\n    stroke={color}\r\n    strokeWidth={strokeWidth}\r\n    className={className}\r\n  >\r\n    <path\r\n      d=\"M352,255.5l-192,96v-192L352,255.5z M512,31.5v448H0v-448H512z M320,95.5h64v-32h-64V95.5z M224,95.5h64v-32h-64V95.5z\r\n\t M128,95.5h64v-32h-64V95.5z M32,95.5h64v-32H32V95.5z M96,415.5H32v32h64V415.5z M192,415.5h-64v32h64V415.5z M288,415.5h-64v32h64\r\n\tV415.5z M384,415.5h-64v32h64V415.5z M480,415.5h-64v32h64V415.5z M480,127.5H32v256h448V127.5z M480,63.5h-64v32h64V63.5z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nMovieIcon.propTypes = {\r\n  color: PropTypes.string,\r\n  size: PropTypes.number,\r\n  strokeWidth: PropTypes.number,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport { SearchIcon, MovieIcon };\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { debounce } from \"lodash\";\r\nimport { SearchIcon, MovieIcon } from \"./Icons\";\r\n\r\nconst apiKey = \"87d395aaa72bae75df666834b8e838d3\";\r\nconst hostUrl = \"https://api.themoviedb.org/3\";\r\n\r\nclass Autocomplete extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The suggestions that match user's input\r\n      filteredSuggestions: [],\r\n      // Whether the suggestion list is shown\r\n      showSuggestions: false,\r\n      // User value\r\n      userInput: \"\",\r\n      // Whether the input element was clicked\r\n      inputClicked: false,\r\n      fade: false\r\n    };\r\n  }\r\n\r\n  getInfo = debounce(() => {\r\n    if (this.state.userInput.length > 2) {\r\n      fetch(\r\n        `${hostUrl}/search/movie?api_key=${apiKey}&language=en-US&query=\r\n        ${this.state.userInput}`\r\n      )\r\n        .then(results => results.json())\r\n        .then(results => {\r\n          this.setState({\r\n            filteredSuggestions: results.results\r\n              .map(obj => ({\r\n                title: obj.title,\r\n                rating: obj.vote_average,\r\n                id: obj.id,\r\n                release_date: obj.release_date\r\n                  ? obj.release_date.split(\"-\")[0]\r\n                  : \"-\"\r\n              }))\r\n              .slice(0, 8)\r\n          });\r\n        });\r\n    }\r\n  }, 150);\r\n\r\n  onBlur = () => {\r\n    this.checkBlur();\r\n  };\r\n\r\n  checkBlur() {\r\n    if (this.state.showSuggestions === false) {\r\n      this.setState({ inputClicked: false });\r\n    }\r\n  }\r\n\r\n  //when user clicks on the grey input box\r\n  onInputClick = () => {\r\n    this.setState({ inputClicked: true, fade: true });\r\n  };\r\n\r\n  //When the input value is changed\r\n  onChange = e => {\r\n    this.setState({\r\n      userInput: e.currentTarget.value\r\n    });\r\n\r\n    if (e.currentTarget.value.length > 2) {\r\n      this.setState(\r\n        {\r\n          showSuggestions: true\r\n        },\r\n        this.getInfo\r\n      );\r\n    } else {\r\n      this.setState({\r\n        showSuggestions: false\r\n      });\r\n    }\r\n  };\r\n\r\n  //when user clicks on a suggestion\r\n  onClick = e => {\r\n    //Update the user input and reset the rest of the state\r\n    this.setState(prevState => ({ inputClicked: !prevState.inputClicked }));\r\n    this.setState({\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.getAttribute(\"value\")\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onInputClick,\r\n      onBlur,\r\n      state: {\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput,\r\n        inputClicked,\r\n        fade\r\n      }\r\n    } = this;\r\n\r\n    let secondInputComponent;\r\n    let suggestionsListComponent;\r\n\r\n    if (inputClicked) {\r\n      secondInputComponent = (\r\n        <div className={fade ? \"fade\" : \"\"}>\r\n          <input\r\n            autoFocus=\"autofocus\"\r\n            className=\"input-clicked\"\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            value={userInput}\r\n          />\r\n          <MovieIcon\r\n            className=\"movie-icon-input\"\r\n            color=\"black\"\r\n            size={23}\r\n            strokeWidth={1.5}\r\n          ></MovieIcon>\r\n          <label className=\"input-label\">Enter a movie name</label>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (showSuggestions && userInput.length > 2 && filteredSuggestions) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <ul className=\"suggestion-list\">\r\n            {filteredSuggestions.map(suggestion => {\r\n              return (\r\n                <li\r\n                  className=\"suggestion-list__item\"\r\n                  key={suggestion.id}\r\n                  datakey={suggestion.title}\r\n                  onClick={onClick}\r\n                  value={suggestion.title}\r\n                >\r\n                  <span className=\"title title--suggestions\">\r\n                    {suggestion.title}\r\n                  </span>\r\n                  <div className=\"subtitle title--suggestions\">\r\n                    {suggestion.rating} Rating, {suggestion.release_date}\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"component-container\">\r\n          <div className=\"input-container\">\r\n            <div className=\"input-container__input\">\r\n              <MovieIcon className=\"movie-icon\" color=\"white\"></MovieIcon>\r\n\r\n              <div className=\"input-clickable\" onClick={onInputClick}>\r\n                {userInput ? userInput : \"Enter movie name\"}\r\n              </div>\r\n              {secondInputComponent}\r\n              {suggestionsListComponent}\r\n            </div>\r\n            <button>\r\n              <SearchIcon\r\n                color=\"#ff690f\"\r\n                size={33}\r\n                strokeWidth={1.5}\r\n              ></SearchIcon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Autocomplete from \"./Autocomplete\";\r\n\r\nfunction App() {\r\n  return <Autocomplete />;\r\n}\r\n\r\nconst container = document.createElement(\"div\");\r\ndocument.body.appendChild(container);\r\nrender(<App />, container);\r\n"],"sourceRoot":""}